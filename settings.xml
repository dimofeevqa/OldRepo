<?xml version="1.0" encoding="UTF-8"?>
<con:soapui-project xmlns:con="http://eviware.com/soapui/config" id="dcc40564-7f68-4161-b94d-1687c67b0d64" created="3.50.0" activeEnvironment="Production" encryptionMode="Not encrypted" name="TaskBoard" resourceRoot="" defaultScriptLanguage="Groovy" projectVersion="" updated="3.50.0" compositeProjectFormat="1.3">
  <con:description>Project used for creation of taskboards</con:description>
  <con:settings>
    <con:setting id="dcc40564-7f68-4161-b94d-1687c67b0d64fileName">TaskBoard-readyapi-project</con:setting>
    <con:setting id="com.eviware.soapui.impl.wsdl.actions.iface.tools.soapui.ProTestRunnerAction@values-local"><![CDATA[<xml-fragment xmlns:con="http://eviware.com/soapui/config">
  <con:entry key="Settings File Password" value=""/>
  <con:entry key="Report Format(s)" value="XML"/>
  <con:entry key="Host:Port" value=""/>
  <con:entry key="Export JUnit Results" value="true"/>
  <con:entry key="Export All" value="true"/>
  <con:entry key="Save After" value="false"/>
  <con:entry key="Slack Channel(s)" value=""/>
  <con:entry key="Add Settings" value="false"/>
  <con:entry key="WSS Password Type" value=""/>
  <con:entry key="Endpoint" value=""/>
  <con:entry key="Test Suite Tags" value=""/>
  <con:entry key="Select Report Type" value="JUnit-Style report for automation"/>
  <con:entry key="System Properties" value=""/>
  <con:entry key="Test Suite" value="Sample"/>
  <con:entry key="Run in-process" value="false"/>
  <con:entry key="Password" value=""/>
  <con:entry key="Print Report" value="true"/>
  <con:entry key="Open Report" value="false"/>
  <con:entry key="Test Case Tags" value=""/>
  <con:entry key="Export JUnit Results with test properties" value="false"/>
  <con:entry key="Global Properties" value=""/>
  <con:entry key="Project Properties" value=""/>
  <con:entry key="Test Case" value="Test Case 1"/>
  <con:entry key="Slack Access Token" value=""/>
  <con:entry key="Project Password" value=""/>
  <con:entry key="Username" value=""/>
  <con:entry key="TestRunner Path" value="C:\Program Files\SmartBear\ReadyAPI-3.50.0\bin"/>
  <con:entry key="Environment" value="No Environment"/>
  <con:entry key="Coverage Report" value="false"/>
  <con:entry key="Enable UI" value="false"/>
  <con:entry key="Root Folder" value="${WORKSPACE}"/>
  <con:entry key="Ignore Errors" value="false"/>
  <con:entry key="Domain" value=""/>
  <con:entry key="Tool Args" value=""/>
  <con:entry key="Save Project" value="false"/>
</xml-fragment>]]></con:setting>
  </con:settings>
  <con:requirements/>
  <con:properties>
    <con:property>
      <con:name>taskId</con:name>
      <con:value>1</con:value>
    </con:property>
  </con:properties>
  <con:wssContainer/>
  <con:databaseConnectionContainer></con:databaseConnectionContainer>
  <con:jmsConnectionContainer/>
  <con:oAuth2ProfileContainer>
    <con:oAuth2Profile>
      <con:name>GitHub</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessToken>eklahkdashkdjsahkdjashkjdashkl</con:accessToken>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus>
      <con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth2Profile>
  </con:oAuth2ProfileContainer>
  <con:oAuth1ProfileContainer/>
  <con:eventHandlers type="RequestFilter.filterRequest" name="RequestFilter.filterRequest">
    <con:script>// Sample event script to add custom HTTP header to all outgoing REST, SOAP and HTTP(S) calls
// This code is often used for adding custom authentication to ReadyAPI functional tests

// If hardcoding the token, uncomment and change line 5
// token = '4567'

// If your token is parameterized in Project level custom property, uncomment line 8
// token = request.parent.testCase.testSuite.project.getProperty('auth_token').getValue()

// To modify all outgoing calls, remove comments from lines 11 to 16
// headers = request.requestHeaders
// if (headers.containsKey('auth_token2') == false) {
//   headers.put('auth_token2', token)
//   request.requestHeaders = headers
// }</con:script>
  </con:eventHandlers>
  <con:eventHandlers type="TestRunListener.afterStep" name="TestRunListener.afterStep">
    <con:script>// Save all test step results into files
// Change the directory path in line 5 to a location where you want to store details
// then uncomment lines 5 to 10

// filePath = 'C:\\tempOutputDirectory\\'
// fos = new java.io.FileOutputStream(filePath + testStepResult.testStep.label + '.txt', true)
// pw = new java.io.PrintWriter(fos)
// testStepResult.writeTo(pw)
// pw.close()
// fos.close()</con:script>
  </con:eventHandlers>
  <con:environment id="7dbb0109-6efb-4578-a9d4-7ab019f1cbcf" name="Development" index="0">
    <con:service type="REST" name="Endpoints">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="" areGlobalProxySettingsIgnored="false">http://localhost:8084/api</con:endpoint>
    </con:service>
    <con:property>
      <con:name>taskId</con:name>
      <con:value/>
    </con:property>
    <con:databaseConnectionContainer></con:databaseConnectionContainer>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:environment id="d1e80dca-0cdb-412d-b66a-9d4dedb5ec2c" name="Production" index="1">
    <con:service type="REST" name="Endpoints">
      <con:endpoint authProfile="No Authorization" proxyHost="" proxyPort="" proxyUsername="" proxyPassword="" areGlobalProxySettingsIgnored="false">https://taskboard-212f.onrender.com/api</con:endpoint>
    </con:service>
    <con:property>
      <con:name>taskId</con:name>
      <con:value>1</con:value>
    </con:property>
    <con:databaseConnectionContainer></con:databaseConnectionContainer>
    <con:jmsConnectionContainer/>
  </con:environment>
  <con:authRepository>
    <con:basicAuthEntry>
      <con:name>Dimo</con:name>
      <con:type>Basic</con:type>
      <con:username>dimo</con:username>
      <con:password>dimo</con:password>
    </con:basicAuthEntry>
    <con:basicAuthEntry>
      <con:name>DimoProd</con:name>
      <con:type>Basic</con:type>
      <con:username>dimo</con:username>
      <con:password>diom</con:password>
    </con:basicAuthEntry>
    <con:oAuth20AuthEntry>
      <con:name>GitHub</con:name>
      <con:type>OAuth 2.0</con:type>
      <con:accessToken>eklahkdashkdjsahkdjashkjdashkl</con:accessToken>
      <con:accessTokenPosition>HEADER</con:accessTokenPosition>
      <con:accessTokenStartingStatus>ENTERED_MANUALLY</con:accessTokenStartingStatus>
      <con:oAuth2Flow>AUTHORIZATION_CODE_GRANT</con:oAuth2Flow>
      <con:refreshAccessTokenMethod>AUTOMATIC</con:refreshAccessTokenMethod>
      <con:jwtConfiguration/>
      <con:responseType>id_token</con:responseType>
    </con:oAuth20AuthEntry>
  </con:authRepository>
  <con:environmentSpec>
    <con:entry environmentId="7dbb0109-6efb-4578-a9d4-7ab019f1cbcf">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
    <con:entry environmentId="d1e80dca-0cdb-412d-b66a-9d4dedb5ec2c">
      <con:authProfile>No Authorization</con:authProfile>
    </con:entry>
  </con:environmentSpec>
  <con:tags/>
</con:soapui-project>
